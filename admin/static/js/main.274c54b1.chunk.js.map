{"version":3,"sources":["Components/Toast.js","Components/CustomModal.js","Components/CustomSelect.js","Components/CustomInput.js","Components/CustomCheckbox.js","Tabs/Options.js","assets/le.png","Components/HintComponent.js","Tabs/Certificates.js","Tabs/WhiteList.js","Components/CustomButtonUpload.js","Tabs/Background.js","Tabs/Additionally.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","close","Toast","message","onClose","classes","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","ContentProps","id","I18n","t","action","IconButton","aria-label","color","className","onClick","defaultProps","CustomModal","children","titleButton","titleButton2","buttonClick","Dialog","maxWidth","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogActions","Button","variant","autoFocus","CustomSelect","table","value","title","attr","options","style","native","onChange","noTranslate","themeType","FormControl","clsx","input","controlElement","Object","assign","paddingTop","Select","e","target","renderValue","_item","item","find","it","src","icon","Input","name","map","MenuItem","backgroundColor","Utils","getInvertedColor","undefined","FormHelperText","withStyles","minWidth","inputNumber","width","height","marginRight","CustomInput","styleComponentBlock","component","size","type","TextField","error","helperText","heightInput","margin","marginTop","CustomCheckbox","checked","FormControlLabel","control","Checkbox","el","label","Options","props","state","toast","ipAddressOptions","certificatesOptions","usersOptions","socketioOptions","openModal","loaded","this","instance","socket","host","common","getAdapterInstances","then","setState","_id","getRawSocket","emit","err","data","IPs4","family","IPs6","hardware","networkInterfaces","eth","hasOwnProperty","num","length","push","address","i","getCertificates","list","getUsers","prevProps","auth","secure","defaultUser","whiteListSettings","default","user","onLoad","LinearProgress","newCommon","JSON","parse","stringify","extIcon","tab","blockWarningContent","onError","text","errorText","column","columnSettings","ipInputStyle","blockWrapperCheckbox","blockWrapper","displayNone","filter","lang","end","replace","Component","display","flexDirection","minHeight","verticalAlign","flexFlow","blockWarning","background","padding","fontSize","alignItems","colorTheme","HintComponent","openLink","useState","setOpen","ClickAwayListener","onClickAway","Tooltip","arrow","placement","interactive","onOpen","Fab","boxShadow","marginLeft","Certificates","readme","logoWidth","alt","logo","window","baseObj","object","read","write","delete","create","file","WhiteList","optionsSelect","miniTableSelect","newObj","copyObj","keys","forEach","keyObj","validateIp","number","newKey","addProperty","keySearch","ip","indexOf","lastIndexOf","test","tableHeadArr","position","TableContainer","overflowX","Paper","Table","maxTable","TableHead","TableRow","TableCell","align","rowSpan","buttonAdd","fontWeight","colSpan","index","TableBody","backgroundTheme","borderBottom","buttonRemove","tableInput","tableSelect","elProperty","indexProperty","Boolean","checkBoxStyle","miniTable","top","left","zIndex","card","lineHeight","textAlign","element","indexEl","newTableHeadArr","splice","elhed","ind","button","marginBottom","border","borderRadius","root","spacing","CustomButtonUpload","valueFileUpload","setValueFileUpload","accept","multiple","files","dataTransfer","htmlFor","Background","imgSRC","readFile","arrayBufferView","Uint8Array","blob","Blob","URL","webkitURL","createObjectURL","Date","now","callback","reader","FileReader","onload","result","readAsArrayBuffer","justifyContent","a","uploadFile","onDrop","acceptedFiles","getRootProps","getInputProps","isDragActive","dropZone","dropZoneActive","imgStyle","fontFamily","transition","outline","maxHeight","Additionally","arrayTabName","translate","App","extendedProps","encryptedFields","translations","require","selectedTab","settings","certPublic","certPrivate","toString","updateNativeValue","adapterName","nameTab","palette","primary","AppBar","Tabs","getSelectedTab","selectTab","scrollButtons","Tab","disabled","checkDisabledTabs","data-name","isIFrame","tabContentIFrame","tabContent","renderTab","renderError","renderSaveCloseButtons","GenericApp","overflow","location","hostname","match","themeName","getThemeName","console","log","version","Sentry","dsn","release","integrations","SentryIntegrations","build","ReactDOM","render","onThemeChange","_theme","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.274c54b1.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { IconButton, Snackbar } from '@material-ui/core';\r\n\r\nimport { MdClose as IconClose } from 'react-icons/md';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    close: {\r\n\r\n    }\r\n}));\r\n\r\nconst Toast = ({ message, onClose }) => {\r\n    const classes = useStyles();\r\n    if (!message) {\r\n        return null;\r\n    }\r\n    return <Snackbar\r\n        anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'center',\r\n        }}\r\n        open={true}\r\n        autoHideDuration={6000}\r\n        onClose={onClose}\r\n        ContentProps={{'aria-describedby': 'message-id',}}\r\n        message={<span id=\"message-id\">{I18n.t(message)}</span>}\r\n        action={[\r\n            <IconButton\r\n                key=\"close\"\r\n                aria-label=\"Close\"\r\n                color=\"inherit\"\r\n                className={classes.close}\r\n                onClick={onClose}\r\n            >\r\n                <IconClose />\r\n            </IconButton>,\r\n        ]}\r\n    />;\r\n}\r\n\r\nToast.defaultProps = {\r\n    message: '',\r\n    onClose: () => { }\r\n};\r\n\r\nToast.propTypes = {\r\n    onClose: PropTypes.func,\r\n    message: PropTypes.string\r\n};\r\n\r\nexport default Toast;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nconst CustomModal = ({ open, close, children, titleButton, titleButton2, buttonClick }) => {\r\n    return <Dialog\r\n        open={open}\r\n        maxWidth=\"md\"\r\n        onClose={close}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n    >\r\n        <DialogTitle id=\"alert-dialog-title\">{I18n.t('Warning')}</DialogTitle>\r\n        <DialogContent>\r\n            {children}\r\n        </DialogContent>\r\n        <DialogActions>\r\n            {titleButton && <Button variant=\"contained\" onClick={buttonClick}>\r\n                {titleButton}\r\n            </Button>}\r\n            {titleButton2 && <Button variant=\"contained\" onClick={close} color=\"primary\" autoFocus>\r\n                {titleButton2}\r\n            </Button>}\r\n        </DialogActions>\r\n    </Dialog>;\r\n}\r\n\r\nCustomModal.defaultProps = {\r\n    open: false,\r\n    buttonClick: () => { },\r\n    close: () => { }\r\n};\r\n\r\nCustomModal.propTypes = {\r\n    open: PropTypes.bool,\r\n    close: PropTypes.func,\r\n    children: PropTypes.any,\r\n    titleButton: PropTypes.string,\r\n    titleButton2: PropTypes.string,\r\n    buttonClick: PropTypes.func\r\n};\r\n\r\nexport default CustomModal;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport { FormControl, FormHelperText, Input, MenuItem, Select, withStyles } from '@material-ui/core';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport Icon from '@iobroker/adapter-react/Components/Icon';\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\n\r\nconst styles = theme => ({\r\n    input: {\r\n        minWidth: 300\r\n    },\r\n    inputNumber: {\r\n        minWidth: 150\r\n    },\r\n    icon: {\r\n        width: 24,\r\n        height: 24,\r\n        marginRight: 8\r\n    }\r\n});\r\n\r\nconst CustomSelect = ({ table, value, title, attr, options, style, classes, native, onChange, className, noTranslate, themeType }) => {\r\n    return <FormControl\r\n        className={clsx(classes.input, classes.controlElement, className)}\r\n        style={Object.assign({ paddingTop: 5 }, style)}\r\n    >\r\n        <Select\r\n            value={table ? value : native[attr] || '_'}\r\n            onChange={e => {\r\n                if (table) {\r\n                    onChange(e.target.value);\r\n                } else {\r\n                    onChange(attr, e.target.value === '_' ? '' : e.target.value)\r\n                }\r\n            }}\r\n            renderValue={_item => {\r\n                const item = options.find(it => it.value === _item);\r\n                return item ? <>\r\n                    <Icon src={item.icon} className={classes.icon}/>\r\n                    {noTranslate ? item.title : I18n.t(item.title)}\r\n                </> : _item\r\n            }}\r\n            input={<Input name={attr} id={attr + '-helper'} />}\r\n        >\r\n            {options.map(item =>\r\n                <MenuItem key={'key-' + item.value} value={item.value || '_'} style={item.color ? {color: item.color, backgroundColor: Utils.getInvertedColor ? Utils.getInvertedColor(item.color, themeType) : undefined} : {}}>\r\n                    <Icon src={item.icon} className={classes.icon}/>\r\n                    {noTranslate ? item.title : I18n.t(item.title)}\r\n                </MenuItem>)}\r\n        </Select>\r\n        <FormHelperText>{I18n.t(title)}</FormHelperText>\r\n    </FormControl>;\r\n}\r\n\r\nCustomSelect.defaultProps = {\r\n    value: '',\r\n    className: null,\r\n    table: false\r\n};\r\n\r\nCustomSelect.propTypes = {\r\n    title: PropTypes.string,\r\n    attr: PropTypes.string,\r\n    options: PropTypes.array.isRequired,\r\n    style: PropTypes.object,\r\n    native: PropTypes.object.isRequired,\r\n    onChange: PropTypes.func,\r\n    noTranslate: PropTypes.bool,\r\n    themeType: PropTypes.string\r\n};\r\n\r\nexport default withStyles(styles)(CustomSelect);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport { FormControl, FormHelperText, TextField, withStyles } from '@material-ui/core';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nconst styles = theme => ({\r\n    input: {\r\n        minWidth: 300\r\n    },\r\n    inputNumber: {\r\n        minWidth: 150\r\n    },\r\n    heightInput: {\r\n        height: 30\r\n    }\r\n});\r\n\r\nconst CustomInput = ({ styleComponentBlock, component, size, variant, table, value, title, attr, type, style, classes, native, onChange, className }) => {\r\n    const error = false;\r\n    return <FormControl\r\n        className={clsx(type === 'number' ? classes.inputNumber : classes.input + ' ' + classes.controlElement, className)}\r\n        style={Object.assign({ paddingTop: 5 }, style)}\r\n    >\r\n        <TextField\r\n            error={!!error}\r\n            variant={variant}\r\n            value={table ? value : native[attr]}\r\n            type={type}\r\n            helperText={error || ''}\r\n            style={style}\r\n            className={classes.heightInput}\r\n            onChange={e => {\r\n                if (table) {\r\n                    onChange(e.target.value);\r\n                } else {\r\n                    onChange(attr, e.target.value);\r\n                }\r\n            }}\r\n            margin=\"normal\"\r\n            size={size}\r\n        />\r\n        <div style={styleComponentBlock}>\r\n            <FormHelperText style={{ marginTop: -3 }}>{I18n.t(title)}</FormHelperText>\r\n            {component}\r\n        </div>\r\n    </FormControl>;\r\n}\r\n\r\nCustomInput.defaultProps = {\r\n    value: '',\r\n    type: 'text',\r\n    className: null,\r\n    table: false,\r\n    native: {},\r\n    variant: 'standard',\r\n    size: 'medium',\r\n    component: null,\r\n    styleComponentBlock: null\r\n};\r\n\r\nCustomInput.propTypes = {\r\n    title: PropTypes.string,\r\n    attr: PropTypes.string,\r\n    type: PropTypes.string,\r\n    style: PropTypes.object,\r\n    native: PropTypes.object,\r\n    onChange: PropTypes.func,\r\n    component: PropTypes.object,\r\n    styleComponentBlock: PropTypes.object\r\n};\r\n\r\nexport default withStyles(styles)(CustomInput);","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Checkbox, FormControlLabel, withStyles } from '@material-ui/core';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nconst styles = theme => ({\r\n    input: {\r\n        minWidth: 300\r\n    }\r\n});\r\n\r\nconst CustomCheckbox = ({ title, attr, style, classes, native, onChange, className, table, checked }) => {\r\n    return <FormControlLabel\r\n        key={attr}\r\n        style={Object.assign({ paddingTop: 5 }, style)}\r\n        className={clsx(classes.controlElement, className)}\r\n        control={\r\n            <Checkbox\r\n                checked={table ? checked : native[attr]}\r\n                onChange={el => {\r\n                    if (table) {\r\n                        onChange(el.target.checked);\r\n                    } else {\r\n                        onChange(attr, !native[attr]);\r\n                    }\r\n                }}\r\n                color=\"primary\"\r\n            />\r\n        }\r\n        label={I18n.t(title)}\r\n    />;\r\n}\r\n\r\nCustomCheckbox.defaultProps = {\r\n    table: false,\r\n    className: null\r\n};\r\n\r\nCustomCheckbox.propTypes = {\r\n    title: PropTypes.string,\r\n    attr: PropTypes.string.isRequired,\r\n    style: PropTypes.object,\r\n    native: PropTypes.object.isRequired,\r\n    onChange: PropTypes.func,\r\n    table: PropTypes.bool\r\n};\r\n\r\nexport default withStyles(styles)(CustomCheckbox);","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Security from '@material-ui/icons/Security';\r\n\r\nimport Logo from '@iobroker/adapter-react/Components/Logo';\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nimport Toast from '../Components/Toast';\r\nimport CustomModal from '../Components/CustomModal';\r\nimport CustomSelect from '../Components/CustomSelect';\r\nimport CustomInput from '../Components/CustomInput';\r\nimport CustomCheckbox from '../Components/CustomCheckbox';\r\nimport {LinearProgress} from \"@material-ui/core\";\r\n\r\nconst styles = theme => ({\r\n    blockWrapper: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        marginRight: 20,\r\n        '@media screen and (max-width: 360px)': {\r\n            marginRight: 0\r\n        }\r\n    },\r\n    displayNone: {\r\n        display: 'none !important'\r\n    },\r\n    tab: {\r\n        width: '100%',\r\n        minHeight: '100%'\r\n    },\r\n    column: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        marginRight: 20\r\n    },\r\n    columnSettings: {\r\n        width: 'calc(100% - 10px)',\r\n    },\r\n    blockWrapperCheckbox: {\r\n        display: 'flex',\r\n        flexFlow: 'wrap'\r\n    },\r\n    ipInputStyle: {\r\n        marginTop: 10,\r\n        width: 900,\r\n        marginRight: 20,\r\n        '@media screen and (max-width: 940px)': {\r\n            width: '100%'\r\n        }\r\n    },\r\n    blockWarning: {\r\n        background: '#2196f3',\r\n        color: '#fff',\r\n        margin: '20px 2px',\r\n        padding: 8,\r\n        fontSize: 20\r\n    },\r\n    blockWarningContent: {\r\n        flexFlow: 'wrap',\r\n        display: 'flex',\r\n        alignItems: 'flex-end'\r\n    }\r\n});\r\n\r\nclass Options extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            toast: '',\r\n            ipAddressOptions: [],\r\n            certificatesOptions: [],\r\n            usersOptions: [],\r\n            socketioOptions: [\r\n                { title: I18n.t('nothing'), value: 'none' },\r\n                { title: I18n.t('built_in'), value: '' }\r\n            ],\r\n            openModal: false,\r\n            loaded: 0,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { instance, socket, common: { host } } = this.props;\r\n        const { socketioOptions } = this.state;\r\n        let loaded = 0;\r\n        socket.getAdapterInstances('socketio').then(state => {\r\n            this.setState({ loaded: ++loaded, socketioOptions: [...socketioOptions, ...state.map(({ _id, common: { name } }) => ({ title: `${name} [${name}.${instance}]`, value: _id }))] })\r\n        });\r\n\r\n        socket.getRawSocket().emit('getHostByIp', host, (err, data) => {\r\n            if (data) {\r\n                let IPs4 = [{ title: `[IPv4] 0.0.0.0 - ${I18n.t('open_ip')}`, value: '0.0.0.0', family: 'ipv4' }];\r\n                let IPs6 = [{ title: '[IPv6] ::', value: '::', family: 'ipv6' }];\r\n                if (data.native.hardware && data.native.hardware.networkInterfaces) {\r\n                    for (let eth in data.native.hardware.networkInterfaces) {\r\n                        if (!data.native.hardware.networkInterfaces.hasOwnProperty(eth)) {\r\n                            continue;\r\n                        }\r\n                        for (let num = 0; num < data.native.hardware.networkInterfaces[eth].length; num++) {\r\n                            if (data.native.hardware.networkInterfaces[eth][num].family !== 'IPv6') {\r\n                                IPs4.push({ title: `[${data.native.hardware.networkInterfaces[eth][num].family}] ${data.native.hardware.networkInterfaces[eth][num].address} - ${eth}`, value: data.native.hardware.networkInterfaces[eth][num].address, family: 'ipv4' });\r\n                            } else {\r\n                                IPs6.push({ title: `[${data.native.hardware.networkInterfaces[eth][num].family}] ${data.native.hardware.networkInterfaces[eth][num].address} - ${eth}`, value: data.native.hardware.networkInterfaces[eth][num].address, family: 'ipv6' });\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                for (let i = 0; i < IPs6.length; i++) {\r\n                    IPs4.push(IPs6[i]);\r\n                }\r\n                this.setState({ loaded: ++loaded, ipAddressOptions: IPs4 });\r\n            }\r\n        })\r\n\r\n        socket.getCertificates()\r\n            .then(list =>\r\n                this.setState({ loaded: ++loaded,certificatesOptions: list }));\r\n\r\n        socket.getUsers()\r\n            .then(list =>\r\n                this.setState({ loaded: ++loaded, usersOptions: list }));\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { native: { auth, secure } } = prevProps;\r\n        const { native: { defaultUser, whiteListSettings }, onChange } = this.props;\r\n        if (!this.props.native.auth && (auth !== this.props.native.auth)) {\r\n            onChange('whiteListSettings.default.user', defaultUser);\r\n        } else if (whiteListSettings && whiteListSettings.default.user !== 'auth' && (auth !== this.props.native.auth)) {\r\n            onChange('whiteListSettings.default.user', 'auth');\r\n        }\r\n        if (defaultUser !== prevProps.native.defaultUser) {\r\n            onChange('whiteListSettings.default.user', defaultUser);\r\n        }\r\n        if (!this.props.native.secure && this.props.native.auth && !this.state.openModal && ((auth !== this.props.native.auth) || (secure !== this.props.native.secure))) {\r\n            this.setState({ openModal: true });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { instance, common, classes, native, onLoad, onChange } = this.props;\r\n        const { certificatesOptions, ipAddressOptions, usersOptions, openModal, toast, socketioOptions, loaded } = this.state;\r\n\r\n        if (loaded < 4) {\r\n            return <LinearProgress />;\r\n        }\r\n\r\n        let newCommon = JSON.parse(JSON.stringify(common));\r\n        newCommon.icon = newCommon.extIcon;\r\n\r\n        return <form className={classes.tab}>\r\n            <Toast message={toast} onClose={() => this.setState({ toast: '' })} />\r\n            <CustomModal\r\n                open={openModal}\r\n                buttonClick={() => {\r\n                    onChange('auth', false);\r\n                    this.setState({ openModal: !openModal });\r\n                    this.setState({ toast: 'Authentication_deactivated' });\r\n                }}\r\n                close={() => this.setState({ openModal: !openModal })}\r\n                titleButton={I18n.t('button_title')}\r\n                titleButton2={I18n.t('button_title2')}>\r\n                <div className={classes.blockWarningContent}><Security style={{ width: 32, height: 32 }} />{I18n.t('modal_title')}</div>\r\n            </CustomModal>\r\n            <Logo\r\n                instance={instance}\r\n                classes={undefined}\r\n                common={newCommon}\r\n                native={native}\r\n                onError={text => this.setState({ errorText: text })}\r\n                onLoad={onLoad}\r\n            />\r\n            <div className={`${classes.column} ${classes.columnSettings}`}>\r\n                <div>\r\n                    <CustomSelect\r\n                        title='IP address'\r\n                        attr='bind'\r\n                        noTranslate\r\n                        className={classes.ipInputStyle}\r\n                        options={ipAddressOptions}\r\n                        native={native}\r\n                        onChange={onChange}\r\n                    />\r\n                    <CustomInput\r\n                        title='port'\r\n                        attr='port'\r\n                        type='number'\r\n                        style={{ marginTop: 5 }}\r\n                        native={native}\r\n                        onChange={onChange}\r\n                    />\r\n                </div>\r\n                <div className={classes.blockWrapperCheckbox}>\r\n                    <div className={classes.blockWrapper}>\r\n                        <CustomCheckbox\r\n                            title='encryption'\r\n                            attr='secure'\r\n                            style={{ marginTop: 10 }}\r\n                            native={native}\r\n                            onChange={onChange}\r\n                        />\r\n                        <CustomCheckbox\r\n                            title='authentication'\r\n                            attr='auth'\r\n                            style={{ marginTop: 10 }}\r\n                            native={native}\r\n                            onChange={onChange}\r\n                        />\r\n                        <CustomCheckbox\r\n                            className={native['auth'] ? null : classes.displayNone}\r\n                            title='basic_authentication'\r\n                            attr='basicAuth'\r\n                            style={{ marginTop: 10 }}\r\n                            native={native}\r\n                            onChange={onChange}\r\n                        />\r\n                        <CustomCheckbox\r\n                            title='cache'\r\n                            attr='cache'\r\n                            style={{ marginTop: 10 }}\r\n                            native={native}\r\n                            onChange={onChange}\r\n                        />\r\n                        <CustomSelect\r\n                            title='socket'\r\n                            attr='socketio'\r\n                            noTranslate\r\n                            options={socketioOptions}\r\n                            style={{ marginTop: 10 }}\r\n                            native={native}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n                    <div className={classes.blockWrapper}>\r\n                        <div className={`${classes.blockWrapperCheckbox} ${native['secure'] ? null : classes.displayNone}`} >\r\n                            <CustomSelect\r\n                                title='public_certificate'\r\n                                attr='certPublic'\r\n                                noTranslate\r\n                                options={[\r\n                                    { title: I18n.t('nothing'), value: '' },\r\n                                    ...certificatesOptions.filter(({ type }) => !type || type === 'public').map(({ name }) => ({ title: name, value: name }))\r\n                                ]}\r\n                                style={{ marginTop: 10, marginRight: 20 }}\r\n                                native={native}\r\n                                onChange={onChange}\r\n                            />\r\n                            <CustomSelect\r\n                                title='private_certificate'\r\n                                attr='certPrivate'\r\n                                noTranslate\r\n                                options={[\r\n                                    { title: I18n.t('nothing'), value: '' },\r\n                                    ...certificatesOptions.filter(({ type }) => !type || type === 'private').map(({ name }) => ({ title: name, value: name }))\r\n                                ]}\r\n                                style={{ marginTop: 10, marginRight: 20 }}\r\n                                native={native}\r\n                                onChange={onChange}\r\n                            />\r\n                            <CustomSelect\r\n                                title='chained_certificate'\r\n                                attr='certChained'\r\n                                noTranslate\r\n                                options={[\r\n                                    { title: I18n.t('nothing'), value: '' },\r\n                                    ...certificatesOptions.filter(({ type }) => !type || type === 'chained').map(({ name }) => ({ title: name, value: name }))\r\n                                ]}\r\n                                style={{ marginTop: 10 }}\r\n                                native={native}\r\n                                onChange={onChange}\r\n                            />\r\n                        </div>\r\n                        <CustomSelect\r\n                            className={!native['auth'] ? null : classes.displayNone}\r\n                            title='users'\r\n                            attr='defaultUser'\r\n                            themeType={this.props.themeType}\r\n                            noTranslate\r\n                            options={usersOptions.map(({ _id, common: { name, color, icon } }) => ({\r\n                                title: typeof name === 'object' ? name[this.props.lang] || name.end || _id.replace(/^system\\.user\\./, '') : name,\r\n                                value: _id.replace(/^system\\.user\\./, ''),\r\n                                color,\r\n                                icon\r\n                            }))}\r\n                            style={{ marginTop: 10, width: 300 }}\r\n                            native={native}\r\n                            onChange={onChange}\r\n                        />\r\n                        <CustomInput\r\n                            className={native['auth'] ? null : classes.displayNone}\r\n                            title='time_out'\r\n                            attr='ttl'\r\n                            type='number'\r\n                            style={{ marginTop: -1, width: 300 }}\r\n                            native={native}\r\n                            onChange={onChange}\r\n                        />\r\n                        <CustomCheckbox\r\n                            title='simple_api'\r\n                            attr='simpleapi'\r\n                            style={{ marginTop: 10 }}\r\n                            native={native}\r\n                            onChange={onChange}\r\n                        />\r\n                        <CustomCheckbox\r\n                            className={native['socketio'] === '' ? null : classes.displayNone}\r\n                            title='web_sockets'\r\n                            attr='forceWebSockets'\r\n                            style={{ marginTop: 10 }}\r\n                            native={native}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>;\r\n    }\r\n}\r\n\r\nOptions.propTypes = {\r\n    common: PropTypes.object.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onError: PropTypes.func,\r\n    onLoad: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    changed: PropTypes.bool,\r\n    socket: PropTypes.object.isRequired,\r\n    themeType: PropTypes.string,\r\n};\r\n\r\nexport default withStyles(styles)(Options);","export default __webpack_public_path__ + \"static/media/le.eb63b1db.png\";","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { ClickAwayListener, Fab, makeStyles, Tooltip } from '@material-ui/core';\r\n\r\nimport HelpOutlineOutlinedIcon from '@material-ui/icons/HelpOutlineOutlined';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nconst useStyles = makeStyles(({ name }) => ({\r\n    colorTheme: {\r\n        color: name === 'dark' ? '#a2a2a2;' : '#c0c0c0',\r\n        backgroundColor: name === 'dark' ? '#ffffff00' : '#ffffff'\r\n    }\r\n}));\r\n\r\nconst HintComponent = ({ children, openLink, style }) => {\r\n    const [open, setOpen] = useState(false);\r\n    const classes = useStyles();\r\n    return <ClickAwayListener onClickAway={() => setOpen(false)}>\r\n        <Tooltip\r\n            arrow\r\n            placement=\"top\"\r\n            title={I18n.t(children)}\r\n            interactive\r\n            open={open}\r\n            onOpen={() => setOpen(true)}\r\n        >\r\n            <Fab\r\n                className={classes.colorTheme}\r\n                style={Object.assign({\r\n                    boxShadow: 'none',\r\n                    marginLeft: 10,\r\n                    width: 20,\r\n                    height: 20,\r\n                    minHeight: 20,\r\n                }, style)}\r\n                size=\"small\" aria-label=\"like\"\r\n                onClick={() => {\r\n                    setOpen(!open);\r\n                    openLink();\r\n                }}\r\n            >\r\n                <HelpOutlineOutlinedIcon />\r\n            </Fab>\r\n        </Tooltip>\r\n    </ClickAwayListener>;\r\n}\r\n\r\nHintComponent.propTypes = {\r\n    children: PropTypes.string,\r\n    openLink: PropTypes.func,\r\n    style: PropTypes.object\r\n};\r\n\r\nHintComponent.defaultProps = {\r\n    children: 'link',\r\n    openLink: () => { },\r\n    style: {}\r\n};\r\n\r\nexport default HintComponent;","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport logo from '../assets/le.png';\r\n\r\nimport CustomCheckbox from '../Components/CustomCheckbox';\r\nimport CustomInput from '../Components/CustomInput';\r\nimport HintComponent from '../Components/HintComponent';\r\n\r\nconst styles = theme => ({\r\n    tab: {\r\n        width: '100%',\r\n        minHeight: '100%'\r\n    },\r\n    column: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        marginRight: 20\r\n    },\r\n    columnSettings: {\r\n        width: 'calc(100% - 10px)'\r\n    },\r\n    logoWidth: {\r\n        width: 200\r\n    },\r\n    fontSize: {\r\n        '@media screen and (max-width: 460px)': {\r\n            '& > *': {\r\n                fontSize: '3.2vw',\r\n            }\r\n        }\r\n    }\r\n\r\n});\r\n\r\nclass Certificates extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            toast: '',\r\n            ipAddressOptions: []\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const { classes, native, onChange, common: { readme } } = this.props;\r\n        return <form className={classes.tab}>\r\n            <img className={classes.logoWidth} alt='logo' src={logo} />\r\n            <div className={`${classes.column} ${classes.columnSettings}`}>\r\n                <div>\r\n                    <CustomCheckbox\r\n                        title='use_certificates'\r\n                        attr='leEnabled'\r\n                        className={classes.fontSize}\r\n                        native={native}\r\n                        onChange={onChange}\r\n                    />\r\n                    <HintComponent openLink={() =>\r\n                        window.open(`${readme}#lets-encrypt-certificates`, '_blank')} />\r\n                </div>\r\n                <div style={native['leEnabled'] ? { display: 'block' } : { display: 'none' }}>\r\n                    <CustomCheckbox\r\n                        title='renew_certificates'\r\n                        attr='leUpdate'\r\n                        className={classes.fontSize}\r\n                        native={native}\r\n                        onChange={onChange}\r\n                    />\r\n                </div>\r\n                <div style={native['leUpdate'] && native['leEnabled'] ? { display: 'block' } : { display: 'none' }}>\r\n                    <CustomInput\r\n                        title='domain_name'\r\n                        attr='lePort'\r\n                        type='number'\r\n                        style={{ marginTop: -1 }}\r\n                        native={native}\r\n                        onChange={onChange}\r\n                    />\r\n                </div>\r\n                <div style={native['leEnabled'] ? { display: 'block' } : { display: 'none' }}>\r\n                    <CustomCheckbox\r\n                        title='use_lets'\r\n                        attr='leStaging'\r\n                        className={classes.fontSize}\r\n                        native={native}\r\n                        onChange={onChange}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </form>;\r\n    }\r\n}\r\n\r\nCertificates.propTypes = {\r\n    common: PropTypes.object.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onError: PropTypes.func,\r\n    onLoad: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    changed: PropTypes.bool,\r\n    socket: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Certificates);\r\n","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nimport CustomCheckbox from '../Components/CustomCheckbox';\r\nimport CustomInput from '../Components/CustomInput';\r\nimport CustomSelect from '../Components/CustomSelect';\r\nimport Toast from '../Components/Toast';\r\n\r\nconst styles = ({ name }) => ({\r\n    backgroundTheme: {\r\n        background: name === 'dark' ? '#3e3838' : '#dcdcdc'\r\n    },\r\n    tab: {\r\n        width: '100%',\r\n        minHeight: '100%'\r\n    },\r\n    button: {\r\n        marginRight: 20,\r\n        marginBottom: 40,\r\n    },\r\n    column: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top'\r\n    },\r\n    columnSettings: {\r\n        width: '100%',\r\n    },\r\n    table: {\r\n        minWidth: 700,\r\n        '& td': {\r\n            padding: 2\r\n        }\r\n    },\r\n    displayNone: {\r\n        display: 'none'\r\n    },\r\n    checkBoxStyle: {\r\n        marginLeft: 0,\r\n        marginRight: 0\r\n    },\r\n    miniTable: {\r\n        display: 'none'\r\n    },\r\n    card: {\r\n        padding: 1,\r\n        margin: '20px 0',\r\n        border: '1px solid',\r\n        borderRadius: 10,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    '@media screen and (max-width: 1700px)': {\r\n        table: {\r\n            '& th': {\r\n                padding: 2\r\n            }\r\n        }\r\n    },\r\n    '@media screen and (max-width: 1280px)': {\r\n        miniTable: {\r\n            display: 'block'\r\n        },\r\n        maxTable: {\r\n            display: 'none'\r\n        },\r\n        table: {\r\n            minWidth: 300\r\n        },\r\n        miniTableSelect: {\r\n            minWidth: 185\r\n        }\r\n    }\r\n});\r\n\r\nconst baseObj = {\r\n    user: 'admin',\r\n    object: {\r\n        read: true,\r\n        list: true,\r\n        write: true,\r\n        delete: true\r\n    },\r\n    state: {\r\n        read: true,\r\n        list: true,\r\n        write: true,\r\n        create: true,\r\n        delete: true\r\n    },\r\n    file: {\r\n        read: true,\r\n        list: true,\r\n        write: true,\r\n        create: true,\r\n        delete: true\r\n    }\r\n}\r\nclass WhiteList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            toast: '',\r\n            usersOptions: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { socket } = this.props;\r\n        socket.getUsers()\r\n            .then(list =>\r\n                this.setState({ usersOptions: list }));\r\n    }\r\n\r\n    tableSelect(el, style) {\r\n        const { classes, native, onChange } = this.props;\r\n        const { usersOptions } = this.state;\r\n        const { whiteListSettings } = native;\r\n        if (el === 'default') {\r\n            return whiteListSettings[el].user;\r\n        }\r\n        const optionsSelect = whiteListSettings.default.user === 'auth' ? [{ title: 'auth', value: 'auth' }] : [];\r\n        return <CustomSelect\r\n            table\r\n            value={whiteListSettings[el].user}\r\n            options={[...optionsSelect, ...usersOptions.map(({ _id, common: { name} }) => ({ title: name, value: _id.replace('system.user.', '') }))]}\r\n            native={native}\r\n            style={style}\r\n            className={classes.miniTableSelect}\r\n            onChange={(e) => {\r\n                const newObj = JSON.parse(JSON.stringify(whiteListSettings));\r\n                newObj[el].user = e;\r\n                onChange('whiteListSettings', newObj);\r\n            }}\r\n        />\r\n    }\r\n\r\n    tableInput(el, style) {\r\n        const { native, onChange } = this.props;\r\n        const { whiteListSettings } = native;\r\n        if (el === 'default') {\r\n            return el;\r\n        }\r\n        return <CustomInput\r\n            table\r\n            value={el}\r\n            style={style}\r\n            onChange={(e) => {\r\n                const copyObj = JSON.parse(JSON.stringify(whiteListSettings));\r\n                let newObj = {};\r\n                Object.keys(copyObj).forEach(keyObj => {\r\n                    if (keyObj === el) {\r\n                        newObj[e] = copyObj[keyObj];\r\n                    } else {\r\n                        newObj[keyObj] = copyObj[keyObj];\r\n                    }\r\n                });\r\n                if (!this.validateIp(e)) {\r\n                    this.setState({ toast: 'incorrect_ip' });\r\n                } else {\r\n                    onChange('whiteListSettings', newObj);\r\n                }\r\n            }}\r\n        />\r\n    }\r\n\r\n    buttonAdd() {\r\n        const { native, onChange } = this.props;\r\n        const { whiteListSettings } = native;\r\n        return <IconButton color=\"primary\" onClick={() => {\r\n            let newObj = JSON.parse(JSON.stringify(whiteListSettings));\r\n            let number = 1;\r\n            let newKey = '192.168.0.1';\r\n            const addProperty = () => {\r\n                if (Object.keys(newObj).find(keySearch => keySearch === newKey)) {\r\n                    newKey = `192.168.0.${number}`;\r\n                    number = number + 1;\r\n                    addProperty();\r\n                }\r\n            }\r\n            addProperty();\r\n            newObj = Object.assign({ [newKey]: baseObj }, newObj);\r\n            onChange('whiteListSettings', newObj);\r\n        }}>\r\n            <AddCircleIcon />\r\n        </IconButton>\r\n    }\r\n\r\n    buttonRemove(el) {\r\n        const { native, onChange } = this.props;\r\n        const { whiteListSettings } = native;\r\n        return <IconButton\r\n            color=\"primary\"\r\n            onClick={() => {\r\n                const copyObj = JSON.parse(JSON.stringify(whiteListSettings));\r\n                delete copyObj[el];\r\n                onChange('whiteListSettings', copyObj);\r\n            }}\r\n            style={el === 'default' ? { display: 'none' } : null}\r\n            aria-label=\"delete\"\r\n        >\r\n            <DeleteIcon />\r\n        </IconButton>\r\n    }\r\n\r\n    validateIp(ip) {\r\n        if (ip.indexOf('*') !== -1 && ip.lastIndexOf('.') > ip.indexOf('*')) {\r\n            return false;\r\n        }\r\n        let expression = /^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$|^(([a-zA-Z]|[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9])\\.)*([A-Za-z]|[A-Za-z][A-Za-z0-9-]*[A-Za-z0-9])$|^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$/;\r\n        return expression.test(ip.replace('*', '111'));\r\n    }\r\n\r\n    render() {\r\n        const { classes, native, onChange } = this.props;\r\n        const { whiteListSettings } = native;\r\n        const { toast } = this.state;\r\n        const tableHeadArr = ['to_read', 'list', 'write', 'delete', 'to_read', 'list', 'write', 'to_create', 'delete', 'to_read', 'list', 'write', 'to_create', 'delete'];\r\n        return <form className={classes.tab}>\r\n            <Toast message={toast} onClose={() => this.setState({ toast: '' })} />\r\n            <div style={{ position: 'relative' }} className={`${classes.column} ${classes.columnSettings}`}>\r\n                <div>\r\n                    <CustomCheckbox\r\n                        title='included'\r\n                        attr='whiteListEnabled'\r\n                        native={native}\r\n                        onChange={onChange}\r\n                    />\r\n                </div>\r\n                {whiteListSettings ? <div className={native['whiteListEnabled'] ? null : classes.displayNone}>\r\n                    <TableContainer style={{ overflowX: 'visible' }} component={Paper}>\r\n                        <Table className={`${classes.table} ${classes.maxTable}`} aria-label=\"spanning table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell align=\"center\" rowSpan={2}>{this.buttonAdd()}</TableCell>\r\n                                    <TableCell align=\"center\" rowSpan={2} style={{ fontWeight: 'bold' }}>IP</TableCell>\r\n                                    <TableCell align=\"center\" rowSpan={2} style={{ fontWeight: 'bold' }}>{I18n.t('user')}</TableCell>\r\n                                    <TableCell align=\"center\" colSpan={4} style={{ fontWeight: 'bold' }}>{I18n.t('object')}</TableCell>\r\n                                    <TableCell align=\"center\" colSpan={5} style={{ fontWeight: 'bold' }}>{I18n.t('status')}</TableCell>\r\n                                    <TableCell align=\"center\" colSpan={5} style={{ fontWeight: 'bold' }}>{I18n.t('file')}</TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    {tableHeadArr.map((el, index) =>\r\n                                        <TableCell key={`${el}_${index}_max`} align=\"center\">{I18n.t(el)}</TableCell>)}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {Object.keys(whiteListSettings).map((el, index) => {\r\n                                    return <TableRow key={`${index}_max`}>\r\n                                        <TableCell className={classes.backgroundTheme} style={{ borderBottom: '1px solid #afafaf' }}>\r\n                                            {this.buttonRemove(el)}\r\n                                        </TableCell>\r\n                                        <TableCell className={classes.backgroundTheme} style={{ borderBottom: '1px solid #afafaf' }}>\r\n                                            {this.tableInput(el, { marginTop: -1, minWidth: 150, paddingTop: 5 })}\r\n                                        </TableCell>\r\n                                        <TableCell className={classes.backgroundTheme} style={{ borderBottom: '1px solid #afafaf' }}>\r\n                                            {this.tableSelect(el, { marginTop: -1 })}\r\n                                        </TableCell>\r\n                                        {['object', 'state', 'file'].map((elProperty, indexProperty) => Object.keys(whiteListSettings[el][elProperty]).map((attr, index) =>\r\n                                            <TableCell className={Boolean(indexProperty % 2) ? classes.backgroundTheme : null} style={{ borderBottom: Boolean(indexProperty % 2) ? '1px solid #afafaf' : null }} key={`${elProperty}_${attr}_max`} align=\"center\">\r\n                                                <CustomCheckbox\r\n                                                    table\r\n                                                    checked={whiteListSettings[el][elProperty][attr]}\r\n                                                    attr={attr}\r\n                                                    native={native}\r\n                                                    className={classes.checkBoxStyle}\r\n                                                    onChange={(e) => {\r\n                                                        const newObj = JSON.parse(JSON.stringify(whiteListSettings));\r\n                                                        newObj[el][elProperty][attr] = e;\r\n                                                        onChange('whiteListSettings', newObj);\r\n                                                    }}\r\n                                                />\r\n                                            </TableCell>))}\r\n                                    </TableRow>\r\n                                })}\r\n                            </TableBody>\r\n                        </Table>\r\n                        <div className={classes.miniTable}>\r\n                            <div className={classes.backgroundTheme} style={{ position: 'sticky', top: -10, left: 12, zIndex: 22, borderBottom: '1px solid' }}>\r\n                                {this.buttonAdd()}\r\n                            </div>\r\n                            <div>\r\n                                {Object.keys(whiteListSettings).map((el, index) => {\r\n                                    return <div\r\n                                        key={`${index}_wrapper`}\r\n                                        className={`${classes.card} ${Boolean(index % 2) ? classes.backgroundTheme : null}`}\r\n                                    >\r\n                                        <div style={{ width: '100%', lineHeight: '30px', textAlign: 'center' }}>\r\n                                            <span>{this.buttonRemove(el)}</span>\r\n                                            <span style={{ marginLeft: 10 }}>IP: {this.tableInput(el, { marginTop: -5, minWidth: 150, marginLeft: 5, verticalAlign: 'middle' })}</span>\r\n                                            <span style={{ marginLeft: 20 }}>{I18n.t('user')}: {this.tableSelect(el, { marginTop: -10, marginLeft: 5, verticalAlign: 'middle' })}</span>\r\n                                        </div>\r\n                                        {['object', 'state', 'file'].map((element, indexEl) => {\r\n                                            let newTableHeadArr = [...tableHeadArr].splice(indexEl === 0 ? 0 : 4, indexEl === 0 ? 4 : 5)\r\n                                            return <Table key={`${indexEl}_mini`} className={classes.table} style={{ width: 'inherit' }} aria-label=\"spanning table\">\r\n                                                <TableHead>\r\n                                                    <TableRow>\r\n                                                        <TableCell style={{ background: '#bbbbbb' }} align=\"center\" colSpan={Object.keys(whiteListSettings[el][element]).length}>\r\n                                                            {I18n.t(['object', 'status', 'file'][indexEl])}</TableCell>\r\n                                                    </TableRow>\r\n                                                    <TableRow>\r\n                                                        {newTableHeadArr.map((elhed, ind) => (<TableCell key={`${elhed}_${ind}_mini`} align=\"center\">\r\n                                                            {I18n.t(elhed)}</TableCell>))}\r\n                                                    </TableRow>\r\n                                                </TableHead>\r\n                                                <TableBody>\r\n                                                    <TableRow>\r\n                                                        {Object.keys(whiteListSettings[el][element]).map((attr) =>\r\n                                                            <TableCell key={`${element}_${attr}_mini_check`} align=\"center\">\r\n                                                                <CustomCheckbox\r\n                                                                    table\r\n                                                                    checked={whiteListSettings[el][element][attr]}\r\n                                                                    attr={attr}\r\n                                                                    native={native}\r\n                                                                    className={classes.checkBoxStyle}\r\n                                                                    onChange={(e) => {\r\n                                                                        const newObj = JSON.parse(JSON.stringify(whiteListSettings));\r\n                                                                        newObj[el][element][attr] = e;\r\n                                                                        onChange('whiteListSettings', newObj);\r\n                                                                    }}\r\n                                                                />\r\n                                                            </TableCell>)}\r\n                                                    </TableRow>\r\n                                                </TableBody>\r\n                                            </Table>\r\n                                        })}</div>\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                    </TableContainer>\r\n                </div> : null}\r\n            </div>\r\n        </form>;\r\n    }\r\n}\r\n\r\nWhiteList.propTypes = {\r\n    common: PropTypes.object.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onError: PropTypes.func,\r\n    onLoad: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    changed: PropTypes.bool,\r\n    socket: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(WhiteList);\r\n","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport { TextField } from '@material-ui/core';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: 'none',\r\n    },\r\n}));\r\n\r\nconst CustomButtonUpload = ({ title, onChange }) => {\r\n    const classes = useStyles();\r\n    const [valueFileUpload, setValueFileUpload] = useState('');\r\n    return <div className={classes.root}>\r\n        <input\r\n            accept=\"image/*\"\r\n            className={classes.input || ''}\r\n            id=\"contained-button-file\"\r\n            multiple\r\n            type=\"file\"\r\n            onChange={(e) => {\r\n                onChange(e.target.files[0] || e.dataTransfer.files[0], name =>\r\n                    setValueFileUpload(name));\r\n            }}\r\n        />\r\n        <label htmlFor=\"contained-button-file\">\r\n            <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                {I18n.t(title)}\r\n            </Button>\r\n            <TextField style={{ marginLeft: 20 }} value={valueFileUpload} />\r\n        </label>\r\n    </div>;\r\n}\r\n\r\nexport default CustomButtonUpload;","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Dropzone from 'react-dropzone';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nimport Toast from '../Components/Toast';\r\nimport CustomCheckbox from '../Components/CustomCheckbox';\r\nimport CustomInput from '../Components/CustomInput';\r\nimport CustomButtonUpload from '../Components/CustomButtonUpload';\r\n\r\nconst styles = theme => ({\r\n    tab: {\r\n        width: '100%',\r\n        minHeight: '100%'\r\n    },\r\n    column: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        marginRight: 20\r\n    },\r\n    columnSettings: {\r\n        width: 'calc(100% - 10px)',\r\n    },\r\n    dropZone: {\r\n        marginTop: 30,\r\n        width: 600,\r\n        border: '2px dashed #bbb',\r\n        borderRadius: 5,\r\n        padding: 25,\r\n        textAlign: 'center',\r\n        fontSize: '20pt',\r\n        fontWeight: 'bold',\r\n        fontFamily: 'Arial',\r\n        color: '#bbb',\r\n        minWidth: 320,\r\n        minHeight: 200,\r\n        transition: 'background 1s',\r\n        '&:focus': {\r\n            outline: 'inherit'\r\n        }\r\n    },\r\n    dropZoneActive: {\r\n        background: '#d6d6d69c'\r\n    },\r\n    imgStyle: {\r\n        maxWidth: 500,\r\n        maxHeight: 500\r\n    },\r\n    '@media screen and (max-width: 680px)': {\r\n        dropZone: {\r\n            width: 'calc(100% - 45px)',\r\n            minWidth: 200,\r\n        },\r\n        imgStyle: {\r\n            width: '100%',\r\n        }\r\n    }\r\n});\r\n\r\nclass Background extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            imgSRC: '',\r\n            toast: ''\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.readFile();\r\n    }\r\n\r\n    readFile() {\r\n        const { socket, instance } = this.props;\r\n\r\n        socket.getRawSocket().emit('readFile', `web.${instance}`, 'login-bg.png', (err, data) => {\r\n            if (!err && data) {\r\n                let arrayBufferView = new Uint8Array(data);\r\n                if (!arrayBufferView.length) {\r\n                    this.setState({ imgSRC: `../../files/web.${instance}/login-bg.png?ts=` + Date.now() });\r\n                } else {\r\n                    let blob = new Blob([arrayBufferView], { type: 'image/png' });\r\n                    let urlCreator = window.URL || window.webkitURL;\r\n                    let imgSRC = urlCreator.createObjectURL(blob);\r\n                    this.setState({ imgSRC });\r\n                }\r\n            } else {\r\n                this.setState({ imgSRC: '' });\r\n            }\r\n        });\r\n    }\r\n\r\n    uploadFile(file, callback) {\r\n        const { socket, instance } = this.props;\r\n        if (!file) return;\r\n        if (file.size > 5 * 1024 * 1024) {\r\n            this.setState({ toast: `File ${file.name} is too big. Maximum 5MB` });\r\n            this.setState({ imgSRC: '' });\r\n            callback && callback('');\r\n            return;\r\n        }\r\n        let reader = new FileReader();\r\n        reader.onload = ({ target: { result } }) => {\r\n            socket.getRawSocket().emit('writeFile', `web.${instance}`, 'login-bg.png', result, () => {\r\n                this.readFile();\r\n            });\r\n        };\r\n        callback && callback(file.name);\r\n        reader.readAsArrayBuffer(file);\r\n    }\r\n\r\n    render() {\r\n        const { classes, native, onChange } = this.props;\r\n        const { imgSRC, toast } = this.state;\r\n        return <form className={classes.tab}>\r\n            <Toast message={toast} onClose={() => this.setState({ toast: '' })} />\r\n            <div className={`${classes.column} ${classes.columnSettings}`}>\r\n                <div>\r\n                    <CustomInput\r\n                        styleComponentBlock={{ height: 20, display: 'flex', justifyContent: 'center', alignItems: 'center' }}\r\n                        component={<CustomInput\r\n                            attr='loginBackgroundColorHelper'\r\n                            type='color'\r\n                            style={{ marginTop: -1, marginLeft: 10, minWidth: 60 }}\r\n                            native={native}\r\n                            onChange={async (e, value) => {\r\n                                await onChange('loginBackgroundColorHelper', value);\r\n                                await onChange('loginBackgroundColor', value);\r\n                            }}\r\n                            variant=\"outlined\"\r\n                            size=\"small\"\r\n                        />}\r\n                        title='color'\r\n                        attr='loginBackgroundColor'\r\n                        style={{ marginTop: -1, marginBottom: 20 }}\r\n                        native={native}\r\n                        onChange={async (e, value) => {\r\n                            await onChange('loginBackgroundColorHelper', value);\r\n                            await onChange('loginBackgroundColor', value);\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <CustomCheckbox\r\n                        title='background_image'\r\n                        attr='loginBackgroundImage'\r\n                        native={native}\r\n                        onChange={onChange}\r\n                    />\r\n                </div>\r\n                <div style={native['loginBackgroundImage'] ? { display: 'block' } : { display: 'none' }}>\r\n                    <div>\r\n                        <CustomButtonUpload\r\n                            title=\"upload_image\"\r\n                            attr=\"files\"\r\n                            native={native}\r\n                            onChange={(e, callback) => this.uploadFile(e, callback)}\r\n                        />\r\n                    </div>\r\n                    <Dropzone\r\n                        accept=\"image/*\"\r\n                        onDrop={acceptedFiles => this.uploadFile(acceptedFiles[0])}>\r\n                        {({ getRootProps, getInputProps, isDragActive }) => (\r\n                            <section>\r\n                                <div\r\n                                    className={`${classes.dropZone} ${isDragActive ? classes.dropZoneActive : null}`}\r\n                                    {...getRootProps()}>\r\n                                    <input {...getInputProps()}/>\r\n                                    <p>{I18n.t('place_the_files_here')}</p>\r\n                                    {imgSRC ? <img className={classes.imgStyle} src={imgSRC} alt=\"img\" /> : null}\r\n                                </div>\r\n                            </section>\r\n                        )}\r\n                    </Dropzone>\r\n                </div>\r\n            </div>\r\n        </form>;\r\n    }\r\n}\r\n\r\nBackground.propTypes = {\r\n    common: PropTypes.object.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onError: PropTypes.func,\r\n    onLoad: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    changed: PropTypes.bool,\r\n    socket: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Background);\r\n","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nimport CustomCheckbox from '../Components/CustomCheckbox';\r\n\r\nconst styles = theme => ({\r\n    tab: {\r\n        width: '100%',\r\n        minHeight: '100%'\r\n    },\r\n    column: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        marginRight: 20\r\n    },\r\n    columnSettings: {\r\n        width: 'calc(100% - 10px)'\r\n    },\r\n    fontSize: {\r\n        '@media screen and (max-width: 460px)': {\r\n            '& > *': {\r\n                fontSize: '3.2vw',\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\nclass Additionally extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            toast: '',\r\n            ipAddressOptions: []\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const { classes, native, onChange } = this.props;\r\n        return <form className={classes.tab}>\r\n            <div className={`${classes.column} ${classes.columnSettings}`}>\r\n                <h4>\r\n                {I18n.t('disable_default')}\r\n                </h4>\r\n                <p>\r\n                {I18n.t('warning_incorrectly')}\r\n                </p>\r\n                <div>\r\n                    <CustomCheckbox\r\n                        title='disable_extensions'\r\n                        attr='disableExtensions'\r\n                        className={classes.fontSize}\r\n                        native={native}\r\n                        onChange={onChange}\r\n                    />\r\n                </div>\r\n                <div style={native['leEnabled'] ? { display: 'block' } : { display: 'none' }}>\r\n                    <CustomCheckbox\r\n                        title='disable_states'\r\n                        attr='disableStates'\r\n                        className={classes.fontSize}\r\n                        native={native}\r\n                        onChange={onChange}\r\n                    />\r\n                </div>\r\n                <div style={native['leEnabled'] ? { display: 'block' } : { display: 'none' }}>\r\n                    <CustomCheckbox\r\n                        title='disable_files'\r\n                        attr='disableFilesObjects'\r\n                        className={classes.fontSize}\r\n                        native={native}\r\n                        onChange={onChange}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </form>;\r\n    }\r\n}\r\n\r\nAdditionally.propTypes = {\r\n    common: PropTypes.object.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onError: PropTypes.func,\r\n    onLoad: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    changed: PropTypes.bool,\r\n    socket: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Additionally);\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport GenericApp from '@iobroker/adapter-react/GenericApp';\r\nimport Loader from '@iobroker/adapter-react/Components/Loader'\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport Options from './Tabs/Options';\r\nimport Certificates from './Tabs/Certificates';\r\nimport WhiteList from './Tabs/WhiteList';\r\nimport Background from './Tabs/Background';\r\nimport Additionally from './Tabs/Additionally';\r\nimport Toast from './Components/Toast';\r\n\r\nconst styles = theme => ({\r\n    root: {},\r\n    tabContent: {\r\n        padding: 10,\r\n        height: 'calc(100% - 64px - 48px - 20px)',\r\n        overflow: 'auto'\r\n    },\r\n    tabContentIFrame: {\r\n        padding: 10,\r\n        height: 'calc(100% - 64px - 48px - 20px - 38px)',\r\n        overflow: 'auto'\r\n    }\r\n});\r\n\r\nconst arrayTabName = [{\r\n    name: 'options',\r\n    translate: 'main_settings',\r\n    index: 0\r\n}, {\r\n    name: 'certificates',\r\n    translate: 'certificates',\r\n    index: 1\r\n}, {\r\n    name: 'whiteList',\r\n    translate: 'whiteList',\r\n    index: 2\r\n}, {\r\n    name: 'additionally',\r\n    translate: 'additionally',\r\n    index: 3\r\n}, {\r\n    name: 'background',\r\n    translate: 'background',\r\n    index: 4\r\n}]\r\n\r\nclass App extends GenericApp {\r\n    constructor(props) {\r\n        const extendedProps = { ...props };\r\n        extendedProps.encryptedFields = ['pass'];\r\n        extendedProps.translations = {\r\n            'en': require('./i18n/en'),\r\n            'de': require('./i18n/de'),\r\n            'ru': require('./i18n/ru'),\r\n            'pt': require('./i18n/pt'),\r\n            'nl': require('./i18n/nl'),\r\n            'fr': require('./i18n/fr'),\r\n            'it': require('./i18n/it'),\r\n            'es': require('./i18n/es'),\r\n            'pl': require('./i18n/pl'),\r\n            'zh-cn': require('./i18n/zh-cn'),\r\n        };\r\n        super(props, extendedProps);\r\n    }\r\n\r\n    getSelectedTab() {\r\n        const { selectedTab } = this.state;\r\n        const tab = selectedTab;\r\n        if (tab) {\r\n            return arrayTabName.find((el) => el.name === tab)?.index || 0;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    onPrepareSave(settings) {\r\n        super.onPrepareSave(settings);\r\n        const { secure, certPublic, certPrivate } = this.state.native;\r\n\r\n        if (secure && (!certPrivate || !certPublic)) {\r\n            this.setState({ toast: 'set_certificates' });\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    renderTab() {\r\n        const { selectedTab, native } = this.state;\r\n        switch (selectedTab) {\r\n            case 'options':\r\n            default:\r\n                return <Options\r\n                    key=\"options\"\r\n                    themeType={this.state.themeType}\r\n                    common={this.common}\r\n                    socket={this.socket}\r\n                    native={native}\r\n                    onError={text => this.setState({ errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text })}\r\n                    instance={this.instance}\r\n                    onChange={(attr, value) => this.updateNativeValue(attr, value)}\r\n                    adapterName={this.adapterName}\r\n                />;\r\n\r\n            case 'certificates':\r\n                return <Certificates\r\n                    key=\"certificates\"\r\n                    common={this.common}\r\n                    socket={this.socket}\r\n                    native={native}\r\n                    onError={text => this.setState({ errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text })}\r\n                    instance={this.instance}\r\n                    onChange={(attr, value) => this.updateNativeValue(attr, value)}\r\n                    adapterName={this.adapterName}\r\n                />;\r\n\r\n            case 'whiteList':\r\n                return <WhiteList\r\n                    key=\"whiteList\"\r\n                    common={this.common}\r\n                    socket={this.socket}\r\n                    native={native}\r\n                    onChange={(attr, value) => this.updateNativeValue(attr, value)}\r\n                    onError={text => this.setState({ errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text })}\r\n                    instance={this.instance}\r\n                    adapterName={this.adapterName}\r\n                />;\r\n\r\n            case 'additionally':\r\n                return <Additionally\r\n                    key=\"additionally\"\r\n                    common={this.common}\r\n                    socket={this.socket}\r\n                    native={native}\r\n                    onChange={(attr, value) => this.updateNativeValue(attr, value)}\r\n                    onError={text => this.setState({ errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text })}\r\n                    instance={this.instance}\r\n                    adapterName={this.adapterName}\r\n                />;\r\n\r\n            case 'background':\r\n                return <Background\r\n                    key=\"background\"\r\n                    common={this.common}\r\n                    socket={this.socket}\r\n                    native={native}\r\n                    onChange={(attr, value) => this.updateNativeValue(attr, value)}\r\n                    onError={text => this.setState({ errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text })}\r\n                    instance={this.instance}\r\n                    adapterName={this.adapterName}\r\n                />;\r\n\r\n        }\r\n    }\r\n\r\n    checkDisabledTabs(nameTab) {\r\n        const { native } = this.state;\r\n        return (!native['auth'] && nameTab === 'background') || (!native['secure'] && nameTab === 'certificates');\r\n    }\r\n\r\n    render() {\r\n        const { loaded, theme, themeType, toast } = this.state;\r\n        const { classes } = this.props;\r\n        if (!loaded) {\r\n            return <MuiThemeProvider theme={theme}>\r\n                <Loader theme={themeType} />\r\n            </MuiThemeProvider>;\r\n        }\r\n\r\n        return <MuiThemeProvider theme={theme}>\r\n            <Toast message={toast} onClose={() => this.setState({ toast: '' })} />\r\n            <div className=\"App\" style={{ background: theme.palette.background.default, color: theme.palette.text.primary }}>\r\n                <AppBar position=\"static\">\r\n                    <Tabs value={this.getSelectedTab()} onChange={(e, index) => {\r\n                        this.selectTab(arrayTabName.find((el) => el.index === index)?.name || arrayTabName[0].name, index)\r\n                    }} scrollButtons=\"auto\">\r\n                        {arrayTabName.map((el, index) => (<Tab key={`${index}-tab-key`} disabled={this.checkDisabledTabs(el.name)} label={I18n.t(el.translate)} data-name={el.name} />))}\r\n                    </Tabs>\r\n                </AppBar>\r\n                <div className={this.isIFrame ? classes.tabContentIFrame : classes.tabContent}>\r\n                    {this.renderTab()}\r\n                </div>\r\n                {this.renderError()}\r\n                {this.renderSaveCloseButtons()}\r\n            </div>\r\n        </MuiThemeProvider>;\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as Sentry from '@sentry/browser';\r\nimport * as SentryIntegrations from '@sentry/integrations';\r\nimport { MuiThemeProvider} from '@material-ui/core/styles';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {version} from '../package.json';\r\nimport theme from '@iobroker/adapter-react/Theme';\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\n\r\nwindow.adapterName = 'web';\r\nlet themeName = Utils.getThemeName();\r\n\r\n\r\nconsole.log('iobroker.' + window.adapterName + '@' + version + ' using theme \"' + themeName + '\"');\r\n\r\nfunction build() {\r\n    return ReactDOM.render(\r\n        <MuiThemeProvider theme={theme(themeName)}>\r\n            <App\r\n                onThemeChange={_theme => {\r\n                    themeName = _theme;\r\n                    build();\r\n                }}\r\n            />\r\n        </MuiThemeProvider>,\r\n        document.getElementById('root')\r\n    );\r\n}\r\n\r\nif (window.location.host !== 'localhost:3000') {\r\n    Sentry.init({\r\n        dsn: 'https://5ad729dbed504d15aa8bde423cae9a8e@sentry.iobroker.net/57',\r\n        release: 'iobroker.' + window.adapterName + '@' + version,\r\n        integrations: [\r\n            new SentryIntegrations.Dedupe()\r\n        ]\r\n    });\r\n}\r\n\r\nbuild();\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}